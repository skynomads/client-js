/**
 * Cloudplane API
 * cloudplane.org API
 *
 * OpenAPI spec version: 0.1
 * Contact: support@cloudplane.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ClientIdentityCredentials } from '../models/ClientIdentityCredentials';
import { ClientIdentityState } from '../models/ClientIdentityState';
import { ClientRecoveryIdentityAddress } from '../models/ClientRecoveryIdentityAddress';
import { ClientVerifiableIdentityAddress } from '../models/ClientVerifiableIdentityAddress';
import { HttpFile } from '../http/http';

export class ClientIdentity {
    /**
    * CreatedAt is a helper struct field for gobuffalo.pop.
    */
    'createdAt'?: string;
    /**
    * Credentials represents all credentials that can be used for authenticating this identity.
    */
    'credentials'?: { [key: string]: ClientIdentityCredentials; };
    /**
    * ID is the identity\'s unique identifier.  The Identity ID can not be changed and can not be chosen. This ensures future compatibility and optimization for distributed stores such as CockroachDB.
    */
    'id'?: string;
    /**
    * NullJSONRawMessage represents a json.RawMessage that works well with JSON, SQL, and Swagger and is NULLable-
    */
    'metadataAdmin'?: any;
    /**
    * NullJSONRawMessage represents a json.RawMessage that works well with JSON, SQL, and Swagger and is NULLable-
    */
    'metadataPublic'?: any;
    /**
    * RecoveryAddresses contains all the addresses that can be used to recover an identity.
    */
    'recoveryAddresses'?: Array<ClientRecoveryIdentityAddress>;
    /**
    * SchemaID is the ID of the JSON Schema to be used for validating the identity\'s traits.
    */
    'schemaId'?: string;
    /**
    * SchemaURL is the URL of the endpoint where the identity\'s traits schema can be fetched from.  format: url
    */
    'schemaUrl'?: string;
    'state'?: ClientIdentityState;
    'stateChangedAt'?: string;
    /**
    * Traits represent an identity\'s traits. The identity is able to create, modify, and delete traits in a self-service manner. The input will always be validated against the JSON Schema defined in `schema_url`.
    */
    'traits'?: any;
    /**
    * UpdatedAt is a helper struct field for gobuffalo.pop.
    */
    'updatedAt'?: string;
    /**
    * VerifiableAddresses contains all the addresses that can be verified by the user.
    */
    'verifiableAddresses'?: Array<ClientVerifiableIdentityAddress>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "credentials",
            "baseName": "credentials",
            "type": "{ [key: string]: ClientIdentityCredentials; }",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "metadataAdmin",
            "baseName": "metadata_admin",
            "type": "any",
            "format": ""
        },
        {
            "name": "metadataPublic",
            "baseName": "metadata_public",
            "type": "any",
            "format": ""
        },
        {
            "name": "recoveryAddresses",
            "baseName": "recovery_addresses",
            "type": "Array<ClientRecoveryIdentityAddress>",
            "format": ""
        },
        {
            "name": "schemaId",
            "baseName": "schema_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "schemaUrl",
            "baseName": "schema_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "ClientIdentityState",
            "format": ""
        },
        {
            "name": "stateChangedAt",
            "baseName": "state_changed_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "traits",
            "baseName": "traits",
            "type": "any",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "verifiableAddresses",
            "baseName": "verifiable_addresses",
            "type": "Array<ClientVerifiableIdentityAddress>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ClientIdentity.attributeTypeMap;
    }

    public constructor() {
    }
}



