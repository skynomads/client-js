/**
 * Cloudplane API
 * cloudplane.org API
 *
 * OpenAPI spec version: 0.1
 * Contact: support@cloudplane.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1PersistentVolumeAccessMode } from '../models/V1PersistentVolumeAccessMode';
import { V1PersistentVolumeClaimSpecDataSource } from '../models/V1PersistentVolumeClaimSpecDataSource';
import { V1PersistentVolumeClaimSpecDataSourceRef } from '../models/V1PersistentVolumeClaimSpecDataSourceRef';
import { V1PersistentVolumeClaimSpecResources } from '../models/V1PersistentVolumeClaimSpecResources';
import { V1PersistentVolumeClaimSpecSelector } from '../models/V1PersistentVolumeClaimSpecSelector';
import { V1PersistentVolumeMode } from '../models/V1PersistentVolumeMode';
import { HttpFile } from '../http/http';

/**
* The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
*/
export class V1PersistentVolumeClaimTemplateSpec {
    /**
    * accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1 +optional
    */
    'accessModes'?: Array<V1PersistentVolumeAccessMode>;
    'dataSource'?: V1PersistentVolumeClaimSpecDataSource;
    'dataSourceRef'?: V1PersistentVolumeClaimSpecDataSourceRef;
    'resources'?: V1PersistentVolumeClaimSpecResources;
    'selector'?: V1PersistentVolumeClaimSpecSelector;
    /**
    * storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 +optional
    */
    'storageClassName'?: string;
    'volumeMode'?: V1PersistentVolumeMode;
    /**
    * volumeName is the binding reference to the PersistentVolume backing this claim. +optional
    */
    'volumeName'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accessModes",
            "baseName": "accessModes",
            "type": "Array<V1PersistentVolumeAccessMode>",
            "format": ""
        },
        {
            "name": "dataSource",
            "baseName": "dataSource",
            "type": "V1PersistentVolumeClaimSpecDataSource",
            "format": ""
        },
        {
            "name": "dataSourceRef",
            "baseName": "dataSourceRef",
            "type": "V1PersistentVolumeClaimSpecDataSourceRef",
            "format": ""
        },
        {
            "name": "resources",
            "baseName": "resources",
            "type": "V1PersistentVolumeClaimSpecResources",
            "format": ""
        },
        {
            "name": "selector",
            "baseName": "selector",
            "type": "V1PersistentVolumeClaimSpecSelector",
            "format": ""
        },
        {
            "name": "storageClassName",
            "baseName": "storageClassName",
            "type": "string",
            "format": ""
        },
        {
            "name": "volumeMode",
            "baseName": "volumeMode",
            "type": "V1PersistentVolumeMode",
            "format": ""
        },
        {
            "name": "volumeName",
            "baseName": "volumeName",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V1PersistentVolumeClaimTemplateSpec.attributeTypeMap;
    }

    public constructor() {
    }
}



