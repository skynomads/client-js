/**
 * Cloudplane API
 * cloudplane.org API
 *
 * OpenAPI spec version: 0.1
 * Contact: support@cloudplane.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1EnvVarValueFrom } from '../models/V1EnvVarValueFrom';
import { HttpFile } from '../http/http';

export class V1EnvVar {
    /**
    * Name of the environment variable. Must be a C_IDENTIFIER.
    */
    'name'?: string;
    /**
    * Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\". +optional
    */
    'value'?: string;
    'valueFrom'?: V1EnvVarValueFrom;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string",
            "format": ""
        },
        {
            "name": "valueFrom",
            "baseName": "valueFrom",
            "type": "V1EnvVarValueFrom",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V1EnvVar.attributeTypeMap;
    }

    public constructor() {
    }
}

